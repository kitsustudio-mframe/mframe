/**
 * Copyright (c) 2020 ZxyKira
 * All rights reserved.
 *
 * SPDX-License-Identifier: MIT
 */

/* ****************************************************************************
 * Include
 */

//-----------------------------------------------------------------------------
#include "EmptyWriteBuffer.h"

//-----------------------------------------------------------------------------
#include "mframe/io/ReadBuffer.h"

/* ****************************************************************************
 * Macro
 */

/* ****************************************************************************
 * Using
 */

//-----------------------------------------------------------------------------
using mframe::io::EmptyWriteBuffer;

//-----------------------------------------------------------------------------
using mframe::io::ReadBuffer;

/* ****************************************************************************
 * Construct Method
 */

//-----------------------------------------------------------------------------
EmptyWriteBuffer::EmptyWriteBuffer(void) {
  return;
}

//-----------------------------------------------------------------------------
EmptyWriteBuffer::~EmptyWriteBuffer(void) {
  return;
}
/* ****************************************************************************
 * Operator Method
 */

/* ****************************************************************************
 * Public Method <Override>
 */

//-----------------------------------------------------------------------------
bool EmptyWriteBuffer::isFull(void) const {
  return true;
}

//-----------------------------------------------------------------------------
int EmptyWriteBuffer::remaining(void) const {
  return 0;
}

//-----------------------------------------------------------------------------
int EmptyWriteBuffer::putByte(const char data) {
  return 0;
}

//-----------------------------------------------------------------------------
int EmptyWriteBuffer::put(ReadBuffer& readBuffer) {
  return 0;
}

//-----------------------------------------------------------------------------
int EmptyWriteBuffer::put(ReadBuffer& readBuffer, int length) {
  return 0;
}

//-----------------------------------------------------------------------------
int EmptyWriteBuffer::put(const void* buffer, int length) {
  return 0;
}

/* ****************************************************************************
 * Public Method
 */

/* ****************************************************************************
 * Protected Method
 */

/* ****************************************************************************
 * Private Method
 */

/* ****************************************************************************
 * Static Variable
 */

/* ****************************************************************************
 * Static Method
 */

/* ****************************************************************************
 * End of file
 */
