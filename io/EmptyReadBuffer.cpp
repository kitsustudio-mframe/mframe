/**
 * Copyright (c) 2020 ZxyKira
 * All rights reserved.
 *
 * SPDX-License-Identifier: MIT
 */

/* ****************************************************************************
 * Include
 */

//-----------------------------------------------------------------------------
#include "./EmptyReadBuffer.h"

//-----------------------------------------------------------------------------

/* ****************************************************************************
 * Macro
 */

/* ****************************************************************************
 * Using
 */

//-----------------------------------------------------------------------------
using mframe::io::EmptyReadBuffer;

//-----------------------------------------------------------------------------
using mframe::io::WriteBuffer;



/* ****************************************************************************
 * Construct Method
 */

//-----------------------------------------------------------------------------
EmptyReadBuffer::EmptyReadBuffer(void) {
  return;
}

//-----------------------------------------------------------------------------
EmptyReadBuffer::~EmptyReadBuffer(void) {
  return;
}

/* ****************************************************************************
 * Operator Method
 */

/* ****************************************************************************
 * Public Method <Override> - mframe::lang::Iterable<char>
 */

//-----------------------------------------------------------------------------
bool peekIndex(int index, char& result) {
  return false;
}

/* ****************************************************************************
 * Public Method <Override> - mframe::lang::ReadBuffer
 */

//-----------------------------------------------------------------------------
bool EmptyReadBuffer::isEmpty(void) const {
  return true;
}

//-----------------------------------------------------------------------------
int EmptyReadBuffer::avariable(void) const {
  return 0;
}

//-----------------------------------------------------------------------------
int EmptyReadBuffer::pollByte(char& result, bool peek) {
  return 0;
}

//-----------------------------------------------------------------------------
int EmptyReadBuffer::poll(WriteBuffer& writeBuffer, bool peek) {
  return 0;
}

//-----------------------------------------------------------------------------
int EmptyReadBuffer::poll(WriteBuffer& writeBuffer, int length, bool peek) {
  return 0;
}

//-----------------------------------------------------------------------------
int EmptyReadBuffer::poll(void* buffer, int bufferSize, bool peek) {
  return 0;
}

//-----------------------------------------------------------------------------
int EmptyReadBuffer::skip(int value) {
  return 0;
}

/* ****************************************************************************
 * Public Method
 */

/* ****************************************************************************
 * Protected Method
 */

/* ****************************************************************************
 * Private Method
 */

/* ****************************************************************************
 * Static Variable
 */

/* ****************************************************************************
 * Static Method
 */

/* ****************************************************************************
 * End of file
 */
