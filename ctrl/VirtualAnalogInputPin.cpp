/**
 * Copyright (c) 2020 ZxyKira
 * All rights reserved.
 *
 * SPDX-License-Identifier: MIT
 */

/* ****************************************************************************
 * Include
 */

//-----------------------------------------------------------------------------
#include "VirtualAnalogInputPin.h"

//-----------------------------------------------------------------------------

/* ****************************************************************************
 * Macro
 */

/* ****************************************************************************
 * Using
 */

//-----------------------------------------------------------------------------
using mframe::ctrl::VirtualAnalogInputPin;

//-----------------------------------------------------------------------------

/* ****************************************************************************
 * Construct Method
 */
//-----------------------------------------------------------------------------
VirtualAnalogInputPin::VirtualAnalogInputPin(void) {
  this->mValue = 0;
  this->mLevel = 0;
  return;
}

//-----------------------------------------------------------------------------
VirtualAnalogInputPin::~VirtualAnalogInputPin(void) {
  this->mValue = 0;
  this->mLevel = 0;
  return;
}

/* ****************************************************************************
 * Operator Method
 */

/* ****************************************************************************
 * Public Method <Override> - mcuf::mframe::hal::AnalogInputPin
 */
//-----------------------------------------------------------------------------
int VirtualAnalogInputPin::read(void) {
  return this->mValue;
}

//-----------------------------------------------------------------------------
int VirtualAnalogInputPin::getConvertLevel(void) {
  return this->mLevel;
}

/* ****************************************************************************
 * Public Method
 */
//-----------------------------------------------------------------------------
void VirtualAnalogInputPin::setValue(int value) {
  if (value > this->mLevel)
    value = this->mLevel;

  this->mValue = value;
  return;
}

//-----------------------------------------------------------------------------
void VirtualAnalogInputPin::setConvertLevel(int level) {
  this->mLevel = level;
  if (this->mValue > this->mLevel)
    this->mValue = this->mLevel;

  return;
}

/* ****************************************************************************
 * Protected Method
 */

/* ****************************************************************************
 * Private Method
 */

/* ****************************************************************************
 * Static Variable
 */

/* ****************************************************************************
 * Static Method
 */

/* ****************************************************************************
 * End of file
 */
