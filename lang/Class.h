/**
 * Copyright (c) 2020 ZxyKira
 * All rights reserved.
 *
 * SPDX-License-Identifier: MIT
 */
#ifndef MFRAME_6C39B857_3E97_4D9E_9DF2_8A9C032C2B09
#define MFRAME_6C39B857_3E97_4D9E_9DF2_8A9C032C2B09

/* ****************************************************************************
 * Include
 */

//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------
#include "mframe/lang/Object.h"

/* ****************************************************************************
 * Namespace
 */
namespace mframe::lang {
  template <class T>
  class Class;
}  // namespace mframe::lang

/* ****************************************************************************
 * Class/Interface/Struct/Enum
 */
template <class T>
class mframe::lang::Class : public mframe::lang::Object {
  /* **************************************************************************
   * Variable
   */

  /* **************************************************************************
   * Abstract Method
   */

  /* **************************************************************************
   * Construct Method
   */
 private:
  /**
   * @brief Construct a new Class object
   *
   */
  Class(void) {
    return;
  }

 public:
  /**
   * @brief Destroy the Class object
   *
   */
  virtual ~Class(void) override {
    return;
  }

  /* **************************************************************************
   * Operator Method
   */

  /* **************************************************************************
   * Public Method <Override>
   */

  /* **************************************************************************
   * Public Method
   */

  /* **************************************************************************
   * Protected Method
   */

  /* **************************************************************************
   * Private Method
   */

  /* **************************************************************************
   * Static Variable
   */

  /* **************************************************************************
   * Static Method
   */
 public:
  /**
   * @brief
   *
   * @return T*
   */
  static T* cast(void) {
    return static_cast<T*>(nullptr);
  }
};

/* ****************************************************************************
 * End of file
 */

#endif /* MFRAME_6C39B857_3E97_4D9E_9DF2_8A9C032C2B09 */
